<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	
	<!-- 配置监听器，服务器启动时候启动Spring IOC容器 -->
	<listener>
  		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/bean1.xml</param-value>
	</context-param>

	<!-- 解决Hibernate的懒加载问题 
	当hibernate+spring配合使用的时候，如果设置了lazy=true，那么在读取数据的时候，当读取了父数据后，hibernate会自动关闭session，
	这样，当要使用子数据的时候，系统会抛出lazyinit的错误，这时就需要使用spring提供的 OpenSessionInViewFilter,
	OpenSessionInViewFilter主要是保持Session状态直到request将全部页面发送到客户端，这样就可以解决延迟加载带来的问题 。
	-->
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<!-- Struts核心过滤器 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
  			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
  
</web-app>
